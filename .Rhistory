#calculate the SNPs that fall below the depth filter
i<-round((sum(dp.matrix < depth, na.rm = TRUE)/sum(!is.na(dp.matrix)))*100, 2)
#report filter
message(i,"% of genotypes fall below a read depth of ",depth," and were converted to NA")
#convert to NAs
dp.matrix[dp.matrix < depth] <- NA
vcfR@gt[,-1][ is.na(dp.matrix) == TRUE ] <- NA
#close if statement
}
table(dp.matrix)
dim(dp.matrix)
dp.matrix[1:10,1:10]
vcfR
vcfR@meta
vcfR@fix
vcfR@gt[1:10,1:10]
vcfR@gt[1:10,1:20]
vcfR@gt[1:10,1:40]
vcfR<-read.vcfR(file = "~/Downloads/ddocent.vcfs/raw.vcf.gz", convertNA = TRUE)
vcfR
vcfR@gt[1:10,1:40]
vcfR<-hard_filter(vcfR=vcfR, depth = 5, gq = 30)
vcfR<-read.vcfR(file = "~/Downloads/ddocent.vcfs/raw.vcf.gz")
dp.matrix<- vcfR::extract.gt(vcfR, element='DP', as.numeric=TRUE)
dp.matrix[1:10,1:10]
gq.matrix<- vcfR::extract.gt(vcfR, element='GQ', as.numeric=TRUE)
gq.matrix[1:10,1:10]
sum(!is.na(gq.matrix))
if (sum(!is.na(dp.matrix)) < .5){
stop("genotype quality not specified in input vcf")
}
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(gq.matrix)) < .5){
stop("genotype quality not specified in input vcf")
}
hard_filter <- function(vcfR,
depth=NULL,
gq=NULL){
#if specified vcfR is not class 'vcfR', fail gracefully
if (class(vcfR) != "vcfR"){
stop("specified vcfR object must be of class 'vcfR'")
}
#if depth is specified, start here
if (!is.null(depth)) {
if (is.numeric(depth) != "TRUE"){
stop("specified depth cutoff must be numeric")
}
#extract depth from the vcf
dp.matrix<- vcfR::extract.gt(vcfR, element='DP', as.numeric=TRUE)
#calculate the SNPs that fall below the depth filter
i<-round((sum(dp.matrix < depth, na.rm = TRUE)/sum(!is.na(dp.matrix)))*100, 2)
#report filter
message(i,"% of genotypes fall below a read depth of ",depth," and were converted to NA")
#convert to NAs
dp.matrix[dp.matrix < depth] <- NA
vcfR@gt[,-1][ is.na(dp.matrix) == TRUE ] <- NA
#close if statement
}
#if no depth is specified
else{
#print user message
message("no depth cutoff provided, exploratory visualization will be generated.")
#extract depth from the vcf
dp.matrix<- vcfR::extract.gt(vcfR, element='DP', as.numeric=TRUE)
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(dp.matrix)) < .5){
stop("genotype quality not specified in input vcf")
}
#set plotting parameters
#plot histogram of depth
graphics::hist(dp.matrix,
xlab = "genotype depth")
graphics::abline(v=mean(dp.matrix, na.rm = TRUE),
col="red",
lty="dashed")
#zoomed in histogram
graphics::hist(dp.matrix[dp.matrix < 25],
xlab = "genotype depth")
}
#if gq is specified
if (!is.null(gq)) {
if (is.numeric(gq) != "TRUE"){
stop("specified genotype quality cutoff must be numeric")
}
#extract gq from the vcf
gq.matrix<- vcfR::extract.gt(vcfR, element='GQ', as.numeric=TRUE)
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(gq.matrix)) < .5){
stop("genotype quality not specified in input vcf")
}
#calculate the SNPs that fall below the gq filter
j<-round((sum(gq.matrix < gq, na.rm = TRUE)/sum(!is.na(gq.matrix)))*100, 2)
#report filter
message(j,"% of genotypes fall below a genotype quality of ",gq," and were converted to NA")
#convert to NAs
gq.matrix[gq.matrix < gq] <- NA
vcfR@gt[,-1][ is.na(gq.matrix) == TRUE ] <- NA
#close if statement
}
else{
message("no genotype quality cutoff provided, exploratory visualization will be generated.")
#extract gq from the vcf
gq.matrix<- vcfR::extract.gt(vcfR, element='GQ', as.numeric=TRUE)
#plot histogram of gq
graphics::hist(gq.matrix,
xlab = "genotype quality")
graphics::abline(v=mean(gq.matrix, na.rm = TRUE),
col="red",
lty="dashed")
}
#return
return(vcfR)
#close function
}
vcfR[1:10,1:10]
vcfR@gt[1:10,1:10]
filt.vcfR<-hard_filter(vcfR=vcfR, depth = 5, gq = 30)
filt.vcfR<-hard_filter(vcfR=vcfR, depth = 5)
hard_filter <- function(vcfR,
depth=NULL,
gq=NULL){
#if specified vcfR is not class 'vcfR', fail gracefully
if (class(vcfR) != "vcfR"){
stop("specified vcfR object must be of class 'vcfR'")
}
#if depth is specified, start here
if (!is.null(depth)) {
if (is.numeric(depth) != "TRUE"){
stop("specified depth cutoff must be numeric")
}
#extract depth from the vcf
dp.matrix<- vcfR::extract.gt(vcfR, element='DP', as.numeric=TRUE)
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(dp.matrix)) < .5){
stop("genotype depth not specified in input vcf")
}
#calculate the SNPs that fall below the depth filter
i<-round((sum(dp.matrix < depth, na.rm = TRUE)/sum(!is.na(dp.matrix)))*100, 2)
#report filter
message(i,"% of genotypes fall below a read depth of ",depth," and were converted to NA")
#convert to NAs
dp.matrix[dp.matrix < depth] <- NA
vcfR@gt[,-1][ is.na(dp.matrix) == TRUE ] <- NA
#close if statement
}
#if no depth is specified
else{
#print user message
message("no depth cutoff provided, exploratory visualization will be generated.")
#extract depth from the vcf
dp.matrix<- vcfR::extract.gt(vcfR, element='DP', as.numeric=TRUE)
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(dp.matrix)) < .5){
message("genotype depth not specified in input vcf")
}
else{
#set plotting parameters
#plot histogram of depth
graphics::hist(dp.matrix,
xlab = "genotype depth")
graphics::abline(v=mean(dp.matrix, na.rm = TRUE),
col="red",
lty="dashed")
#zoomed in histogram
graphics::hist(dp.matrix[dp.matrix < 25],
xlab = "genotype depth")
}
}
#if gq is specified
if (!is.null(gq)) {
if (is.numeric(gq) != "TRUE"){
stop("specified genotype quality cutoff must be numeric")
}
#extract gq from the vcf
gq.matrix<- vcfR::extract.gt(vcfR, element='GQ', as.numeric=TRUE)
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(gq.matrix)) < .5){
stop("genotype quality not specified in input vcf")
}
#calculate the SNPs that fall below the gq filter
j<-round((sum(gq.matrix < gq, na.rm = TRUE)/sum(!is.na(gq.matrix)))*100, 2)
#report filter
message(j,"% of genotypes fall below a genotype quality of ",gq," and were converted to NA")
#convert to NAs
gq.matrix[gq.matrix < gq] <- NA
vcfR@gt[,-1][ is.na(gq.matrix) == TRUE ] <- NA
#close if statement
}
else{
message("no genotype quality cutoff provided, exploratory visualization will be generated.")
#extract gq from the vcf
gq.matrix<- vcfR::extract.gt(vcfR, element='GQ', as.numeric=TRUE)
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(gq.matrix)) < .5){
message("genotype quality not specified in input vcf")
}
else{
#plot histogram of gq
graphics::hist(gq.matrix,
xlab = "genotype quality")
graphics::abline(v=mean(gq.matrix, na.rm = TRUE),
col="red",
lty="dashed")
}
}
#return
return(vcfR)
#close function
}
filt.vcfR<-hard_filter(vcfR=vcfR, depth = 5)
filt.vcfR@gt[1:10,1:10]
filt.vcfR<-filter_biallelic(filt.vcfR)
filt.vcfR@gt[1:10,1:10]
filt.vcfR@gt[1:10,1:10]
filt.vcfR<-filter_allele_balance(filt.vcfR)
vcfR<-filt.vcfR
filt.vcfR<-hard_filter(vcfR=vcfR, depth = 5)
filt.vcfR<-filter_biallelic(filt.vcfR)
filt.vcfR@gt[1:10,1:10]
#filt.vcfR<-filter_allele_balance(filt.vcfR)
vcfR<-filt.vcfR
#store vector of number of alternate alleles at each SNP
v<-nchar(vcfR@fix[,"ALT"])
table(v)
vcfR@fix[,"ALT"]
#add 1 to each value to account for the reference allele
v<-v+1
v
table(v)
graphics::hist(v,
main= "distribution of alleles present in vcf",
xlab= "number of alleles",
ylab= "number of SNPs",
xlim= c(.5,4.5))
graphics::abline(v=2.5,
col="red")
p<-nrow(vcfR@fix)
p
p-sum(nchar(vcfR@fix[,"ALT"]) == 1)
q<-p-sum(nchar(vcfR@fix[,"ALT"]) == 1)
y<-q/p
message(q, " SNPs, ", round(y, 3), "% of all input SNPs, contained more than 2 alleles, and were removed from the VCF")
nchar(vcfR@fix[,"ALT"]) == 1
table(nchar(vcfR@fix[,"ALT"]) == 1)
vcfR<-vcfR[nchar(vcfR@fix[,"ALT"]) == 1,]
#set default parameter for minimum allele ratio for a het call (.25)
if(is.null(min.ratio)){
min.ratio=.25
}
ad.matrix<- vcfR::extract.gt(vcfR, element='AD')
gt.matrix<- vcfR::extract.gt(vcfR, element='GT')
ad.matrix[1:10,1:10]
gt.matrix[1:10,1:10]
if (sum(!is.na(ad.matrix)) < .5){
stop("allele depth is not specified in input vcf, therefore allele balance cannot be calculated")
}
filter_allele_balance <- function(vcfR,
min.ratio=NULL,
max.ratio=NULL){
#if specified vcfR is not class 'vcfR', fail gracefully
if (class(vcfR) != "vcfR"){
stop("specified vcfR object must be of class 'vcfR'")
}
#set default parameter for minimum allele ratio for a het call (.25)
if(is.null(min.ratio)){
min.ratio=.25
}
#set default parameter for maximum allele ratio for a het call (.75)
if(is.null(max.ratio)){
max.ratio=.75
}
#if these ratios have been specified by the user, leave them alone
#extract AD from the vcf
ad.matrix<- vcfR::extract.gt(vcfR, element='AD')
#write a test to catch if the variable of interest has not been specified
if (sum(!is.na(ad.matrix)) < .5){
stop("allele depth is not specified in input vcf, therefore allele balance cannot be calculated")
}
#extract GT from the vcf
gt.matrix<- vcfR::extract.gt(vcfR, element='GT')
#mask dp matrix to include only called hets from gt matrix
ad.matrix[gt.matrix != "0/1"]<-NA
#split allele 1 depth from allele 2 depth
al1<-structure(as.numeric(gsub(",.*", "", ad.matrix)), dim=dim(ad.matrix))
al2<-structure(as.numeric(gsub(".*,", "", ad.matrix)), dim=dim(ad.matrix))
#calculate AB for each sample
al.bal<-al1/(al1 + al2)
#calculate logical storing whether each het genotype passes the filter
AB<-al1/(al1 + al2) > max.ratio | al1/(al1 + al2) < min.ratio
#calculate percent of het genotypes failing the filter
p<-round(sum(AB, na.rm = TRUE) / sum(is.na(AB) == FALSE)*100, 2)
#calculate overall percentage of genotypes failing the filter
j<-round(sum(AB, na.rm = TRUE) / sum(is.na(gt.matrix) == FALSE)*100, 2)
#print to user
message(p,"% of het genotypes (",j,"% of all genotypes) fall outside of ",min.ratio," - ",max.ratio, " allele balance ratio and were converted to NA")
#convert failing genotypes to NA
vcfR@gt[,-1][AB]<-NA
#make histogram of allele balance at all het genotypes
graphics::hist(al.bal,
xlim = c(0,1),
ylab = "number of genotypes",
xlab = "Allele balance",
main ="allele balance distribution")
graphics::abline(v=c(min.ratio,max.ratio),
col="red")
#return vcfR
return(vcfR)
#close function
}
filt.vcfR<-filter_allele_balance(filt.vcfR)
packageStartupMessage(
"SNPfiltR"
)
#print package startup message
packageStartupMessage(
"SNPfiltR v.1.0.0"
)
library(vcfR)
library(vcfR)
library(ade4)
citation('vcfR') # Citation
packageStartupMessage(
"SNPfiltR v.1.0.0"
"Please cite:
DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>
Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17(1):44-53. http://dx.doi.org/10.1111/1755-0998.12549."
)
#print package startup message
packageStartupMessage(
"SNPfiltR v.1.0.0"
"Please cite: \nDeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \nKnaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17(1):44-53. http://dx.doi.org/10.1111/1755-0998.12549."
)
#print package startup message
packageStartupMessage(
"SNPfiltR v.1.0.0"
"Please cite:"
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>"
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17(1):44-53. http://dx.doi.org/10.1111/1755-0998.12549.")
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0"
"Please cite:"
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>"
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17(1):44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0"
"Please cite:"
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>"
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
packageStartupMessage(
c("SNPfiltR v.1.0.0"
"Please cite:"
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>"
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
"Please cite:")
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0"
"Please cite:"))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0",
"Please cite:",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n",
"Please cite:",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n",
"Please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1>",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n",
"Please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n",
"Please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n",
"Please cite: \n \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n \n",
"Please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \n and: \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \nand: \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("this is SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \nand: \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \nand: \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \nand \n \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n \n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \nand \n \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n \nand \n \n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n \n",
"If you use SNPfiltR in your published work, please cite: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\nand \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
#print package startup message
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n\n",
"If you use SNPfiltR in your published work, please cite: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\nand \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549."))
install_github("DevonDeRaad/SNPfiltR")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(vcfR)
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n\n",
"Detailed usage information is available at: https://devonderaad.github.io/SNPfiltR/ \n\n",
"If you use SNPfiltR in your published work, please cite: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\nand \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549.")
)
packageStartupMessage(
c("This is SNPfiltR v.1.0.0 \n\n",
"Detailed usage information is available at: https://devonderaad.github.io/SNPfiltR/ \n\n",
"If you use SNPfiltR in your published work, please cite the following: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549.")
)
pkg.version <- utils::packageVersion("vcfR")
pkg.version
pkg.version <- utils::packageVersion("SNPfiltR")
pkg.version
packageStartupMessage(
c("This is SNPfiltR v.", pkg.version, "\n\n",
"Detailed usage information is available at: https://devonderaad.github.io/SNPfiltR/ \n\n",
"If you use SNPfiltR in your published work, please cite the following papers: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549.")
)
packageStartupMessage(
c(paste("This is SNPfiltR v.", pkg.version, "\n\n"),
"Detailed usage information is available at: https://devonderaad.github.io/SNPfiltR/ \n\n",
"If you use SNPfiltR in your published work, please cite the following papers: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549.")
)
packageStartupMessage(
c(paste0("This is SNPfiltR v.", pkg.version, "\n\n"),
"Detailed usage information is available at: https://devonderaad.github.io/SNPfiltR/ \n\n",
"If you use SNPfiltR in your published work, please cite the following papers: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549.")
)
packageStartupMessage(
c(paste0("This is SNPfiltR v.", pkg.version, "\n\n"),
"Detailed usage information is available at: devonderaad.github.io/SNPfiltR/ \n\n",
"If you use SNPfiltR in your published work, please cite the following papers: \n\n",
"DeRaad, D.A. 2021. SNPfiltR: an R package for interactive and reproducible SNP filtering. Preprint on Authorea. <http://dx.doi.org/10.22541/au.163976415.53888836/v1> \n\n",
"Knaus, Brian J., and Niklaus J. Grunwald. 2017. VCFR: a package to manipulate and visualize variant call format data in R. Molecular Ecology Resources 17.1:44-53. http://dx.doi.org/10.1111/1755-0998.12549.")
)
install_github("DevonDeRaad/SNPfiltR")
pkgdown::build_home()
